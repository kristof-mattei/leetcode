name: Container Registry Cleanup

on:
  schedule:
    # Every day at 20:00 UTC (8 PM)
    - cron: "0 20 * * *"
  workflow_dispatch:

permissions:
  packages: write
  contents: read

jobs:
  repo-has-container:
    name: Repo has container?
    runs-on: ubuntu-latest
    outputs:
      has_container: ${{ steps.determine.outputs.has_container }}
    steps:
      - name: Repo has docker container?
        shell: bash
        id: determine
        run: |
          has_container="${{ vars.HAS_CONTAINER }}"
          echo "has_container=${has_container:-false}" >> ${GITHUB_OUTPUT}

  cleanup-containers:
    name: Cleanup containers
    runs-on: ubuntu-latest
    needs:
      - repo-has-container
    if: |
      fromJSON(needs.repo-has-container.outputs.has_container) == true
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false

      - name: Run container cleanup
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./.github/scripts/cleanup-containers.sh \
            --user ${{ github.repository_owner }} \
            --package ${{ github.event.repository.name }} \
            --yes

  cleanup-container-build-cache:
    name: Cleanup container build cache
    runs-on: ubuntu-latest
    needs:
      - repo-has-container
    if: |
      fromJSON(needs.repo-has-container.outputs.has_container) == true
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false

      - name: Run container build cache cleanup
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./.github/scripts/cleanup-container-build-cache.sh \
            --user ${{ github.repository_owner }} \
            --package ${{ github.event.repository.name }}-cache \
            --yes
