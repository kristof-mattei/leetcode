# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release

on:
  workflow_dispatch: # releasing is manual as we don't want to release every time

concurrency:
  group: "${{ github.workflow }}"
  cancel-in-progress: true # only last step is important, which runs or doesn't

permissions:
  contents: write # to write tags
  packages: write # to write tags to Docker registry
  issues: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Only on main
        if: |
          github.ref != 'refs/heads/main'
        shell: bash
        run: |
          echo "Only to be executed on main"
          exit 1

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          show-progress: false
          token: ${{ secrets.TOKEN_TO_TRIGGER_SUBSEQUENT_WORKFLOWS }}

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        env:
          CACHE_NAME: cargo-cache-dependencies
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-cocogitto
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-

      - name: Set up toolchain
        shell: bash
        run: |
          rm ${HOME}/.cargo/bin/cargo-fmt
          rm ${HOME}/.cargo/bin/rust-analyzer
          rm ${HOME}/.cargo/bin/rustfmt

          rustup self update
          rustup update
          rustup show active-toolchain || rustup toolchain install
          rustup show

          cargo --version

      - name: Get binstall
        shell: bash
        working-directory: /tmp
        run: |
          archive="cargo-binstall-x86_64-unknown-linux-musl.tgz"
          wget \
            --output-document=- \
            --timeout=10 \
            --waitretry=3 \
            --retry-connrefused \
            --progress=dot:mega \
            "https://github.com/cargo-bins/cargo-binstall/releases/latest/download/${archive}" \
            | tar \
                --directory=${HOME}/.cargo/bin/ \
                --strip-components=0 \
                --no-overwrite-dir \
                --extract \
                --verbose \
                --gunzip \
                --file=-

      - name: Install cocogitto to get the next version number
        shell: bash
        run: |
          cargo binstall --no-confirm cocogitto

      - name: Bump
        shell: bash
        id: release
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

          cog bump --auto

          version="v$(cog -v get-version)"
          echo "version=$version" >> ${GITHUB_OUTPUT}

          git push

      - name: Generate Changelog
        shell: bash
        run: |
          cog changelog --at ${{ steps.release.outputs.version }} > GITHUB_CHANGELOG.md

      - name: Upload github release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          body_path: GITHUB_CHANGELOG.md
          tag_name: ${{ steps.release.outputs.version }}
          token: ${{ secrets.TOKEN_TO_TRIGGER_SUBSEQUENT_WORKFLOWS }}
