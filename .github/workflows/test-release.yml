# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Test Release

on:
  workflow_dispatch: # releasing is manual as we don't want to release every time

concurrency:
  group: "${{ github.workflow }}"
  cancel-in-progress: true # only last step is important, which runs or doesn't

permissions:
  contents: write
  issues: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-release:
    name: Test Release
    runs-on: ubuntu-latest
    steps:
      - name: Only on main
        if: |
          github.ref != 'refs/heads/main'
        shell: bash
        run: |
          echo "Only to be executed on main"
          exit 1

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          show-progress: false

      - name: Cache cargo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        env:
          CACHE_NAME: cargo
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-git-cliff
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-

      - name: Set up toolchain
        shell: bash
        run: |
          rm ${HOME}/.cargo/bin/cargo-fmt
          rm ${HOME}/.cargo/bin/rust-analyzer
          rm ${HOME}/.cargo/bin/rustfmt

          rustup self update
          rustup update
          rustup show active-toolchain || rustup toolchain install
          rustup show

          cargo --version

      - name: Get binstall
        shell: bash
        working-directory: /tmp
        run: |
          archive="cargo-binstall-x86_64-unknown-linux-musl.tgz"
          wget \
            --output-document=- \
            --timeout=10 \
            --waitretry=3 \
            --retry-connrefused \
            --progress=dot:mega \
            "https://github.com/cargo-bins/cargo-binstall/releases/latest/download/${archive}" \
            | tar \
                --directory=${HOME}/.cargo/bin/ \
                --strip-components=0 \
                --no-overwrite-dir \
                --extract \
                --verbose \
                --gunzip \
                --file=-

      - name: Install git-cliff to generate changelog & next version number
        shell: bash
        run: |
          cargo binstall --github-token ${{ secrets.GITHUB_TOKEN }} --no-confirm git-cliff

      - name: Generate the changelog representing the next release
        shell: bash
        id: release
        run: |
          repository=${{ github.repository }}
          # split at the last / and keep that (kristof-mattei/repo-name -> repo-name)
          repository=${repository##*/}

          version=$(git-cliff --bumped-version --unreleased --github-token ${{ secrets.GITHUB_TOKEN }})
          echo "version=$version" >> ${GITHUB_OUTPUT}

          commit_message="chore(release): Release ${version}"

          git-cliff --output diff-CHANGELOG.md --bump --unreleased --latest --with-commit "${commit_message}" --github-token ${{ secrets.GITHUB_TOKEN }}

          echo "# Next release changelog:" >> ${GITHUB_STEP_SUMMARY}
          cat diff-CHANGELOG.md >> ${GITHUB_STEP_SUMMARY}
