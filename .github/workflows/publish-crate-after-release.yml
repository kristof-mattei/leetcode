# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Publish crate

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: "${{ github.workflow }}"
  cancel-in-progress: false # last one must win in case of multiple releases

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  repo-has-crate:
    name: Repo publishes crate?
    runs-on: ubuntu-latest
    outputs:
      has_crate: ${{ steps.determine.outputs.has_crate }}

    steps:
      - name: Repo has crate?
        id: determine
        shell: bash
        run: |
          has_crate="${{ vars.HAS_CRATE }}"
          echo "has_crate=${has_crate:-false}" >> ${GITHUB_OUTPUT}

  publish-crate:
    name: Publish crate
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    needs:
      - repo-has-crate
    if: |
      fromJSON(needs.repo-has-crate.outputs.has_crate) == true
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          show-progress: false

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        env:
          CACHE_NAME: cargo-cache-dependencies
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-test
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-

      - name: Set up mold
        uses: rui314/setup-mold@85c79d00377f0d32cdbae595a46de6f7c2fa6599 # v1

      - name: Set up toolchain
        shell: bash
        run: |
          rm ${HOME}/.cargo/bin/cargo-fmt
          rm ${HOME}/.cargo/bin/rust-analyzer
          rm ${HOME}/.cargo/bin/rustfmt

          rustup self update
          rustup update
          rustup show active-toolchain || rustup toolchain install
          rustup show

          cargo --version

      - name: Get binstall
        shell: bash
        working-directory: /tmp
        run: |
          archive="cargo-binstall-x86_64-unknown-linux-musl.tgz"
          wget \
            --output-document=- \
            --timeout=10 \
            --waitretry=3 \
            --retry-connrefused \
            --progress=dot:mega \
            "https://github.com/cargo-bins/cargo-binstall/releases/latest/download/${archive}" \
            | tar \
                --directory=${HOME}/.cargo/bin/ \
                --strip-components=0 \
                --no-overwrite-dir \
                --extract \
                --verbose \
                --gunzip \
                --file=-

      - name: Install cargo-edit to do set-version
        shell: bash
        run: |
          cargo binstall --no-confirm cargo-edit

      - name: Set version in Cargo.toml / Cargo.lock
        shell: bash
        id: version
        run: |
          version="${{ github.ref_name }}"
          # remove v
          version="${version//v/}"

          # store
          cargo set-version ${version}

          # debug
          cat Cargo.toml

      - uses: rust-lang/crates-io-auth-action@e919bc7605cde86df457cf5b93c5e103838bd879 # v1.0.1
        id: auth

      - name: Publish
        shell: bash
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
        run: |
          # we don't commit the version number in our codebase
          cargo publish --allow-dirty
